#!/usr/bin/env bash

set -e
set -o pipefail

[ -n "$ASDF_INSTALL_VERSION" ] || (>&2 echo 'Missing ASDF_INSTALL_VERSION' && exit 1)
[ -n "$ASDF_INSTALL_PATH" ] || (>&2 echo 'Missing ASDF_INSTALL_PATH' && exit 1)

get_platform () {
	local platform="$(uname | tr '[:upper:]' '[:lower:]')"

	case "$platform" in
		linux|darwin|freebsd)
			echo "Platform '${platform}' supported!" >&2
			;;
		*)
			echo "Platform '${platform}' not supported!" >&2
			exit 1
			;;
	esac

	case "$platform" in
		darwin) platform="osx-amd"; ;;
	esac

	echo -n $platform
}

get_download_url() {
  	local version=$1
	local platform=$2
	echo "https://github.com/stedolan/jq/releases/download/jq-${version}/jq-${platform}64"
}

my_mktemp () {
	local tempdir=""
	if [ "linux" = "$1" ] ; then
		tempdir=$(mktemp -d asdf-golang.XXXX)
	else
		tempdir=$(mktemp -dt asdf-golang.XXXX)
	fi
	echo -n $tempdir
}

install_step() {
	local install_type=$1
  	local version=$2
  	local install_path=$3
  	local platform=$(get_platform)
	local tempdir=$(my_mktemp $platform)
  	local download_url="$(get_download_url $version $platform)"

	local bin_install_path="$install_path/bin"

	mkdir -p $bin_install_path
	curl -sSL $download_url -o ${tempdir}/jq

	mv ${tempdir}/jq ${bin_install_path}
	chmod +x ${bin_install_path}/jq

	rm -rf $tempdir
}

install_step $ASDF_INSTALL_TYPE $ASDF_INSTALL_VERSION $ASDF_INSTALL_PATH